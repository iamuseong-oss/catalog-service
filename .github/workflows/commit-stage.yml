name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: iamuseong-oss/catalog-service
  VERSION: latest

jobs:
  build:
    name: 우분투 실행
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      security-events: write
    steps:
      - name: 소스코드 체크아웃
        uses: actions/checkout@v5
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: microsoft
          java-version: 17
          cache: gradle        
      - name: 빌드
        run: | 
          chmod +x gradlew
          ./gradlew build
      - name: 코드 취약성 검사
        uses: anchore/scan-action@v6
        id: scan
        with:
          path: "${{ github.workspace }}"
          output-format: sarif
          severity-cutoff: high
          fail-build: false
      - name: 취약성 보고
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with: 
          sarif_file: ${{ steps.scan.outputs.sarif }}
  package:
    name: 패키지 그리고 퍼블리시
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: 소스코드 체크아웃
        uses: actions/checkout@v5
      - name: JDK 설정
        uses: actions/setup-java@v5
        with:
          distribution: microsoft
          java-version: 17
          cache: gradle
      - name: 빌드 콘테이너 이미지
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: OCI image 취약성 검사
        uses: anchore/scan-action@v6
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          output-format: sarif
          fail-build: false
          severity-cutoff: high
      - name: 취약성 보고
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with: 
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: 로그인 컨테이너 레지스트리
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 컨테이너 이미지 배포
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
